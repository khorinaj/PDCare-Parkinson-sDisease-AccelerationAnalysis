function [expandedLabels]=extractLabelBiobank(WristParID,ClassificationType,dataDir)
% extractLabelBiobank - Extract and expand labels from wrist-worn sensor data
%
% Description:
% This function processes label data collected from wrist-worn sensors for a set of participants. 
% It reads time-series classification labels from .csv files which is prediceted by a public model called [OxWearables](https://github.com/OxWearables/ssl-wearables).
% id*-timeSeries.csv\id*-timeSeries.csv file is the default name format generated by the public model
% then expands the labels to match the time resolution of the processed sensor data, and saves the expanded labels for each participant.
%
% Inputs:
% - WristParID: (array of strings or numbers) IDs of the participants whose labels need to be extracted (e.g., ["19", "20"]).
% - ClassificationType: (string) Type of labels to extract:
%     - 'ActivityIntensity': Activity intensity labels.
%     - 'OtherType': Labels corresponding to another classification type.
% - dataDir: (string) Directory containing the time-series .csv files and processed data files.
%
% Outputs:
% - expandedLabels: (array) Matrix of expanded labels, with rows corresponding to the time dimension of processed data and columns for each label type.

% Example Usage:
% [expandedLabels] = extractLabelBiobank(["19", "20"], 'ActivityIntensity', 'PublicData/');
% This extracts and expands labels for participants '19' and '20', saves them, and returns the expanded label matrix.

for io=1:length(WristParID)

    ID=(WristParID(io));
    % Extract the .zip file
    gunzip(fullfile(dataDir,ClassificationType,strcat('id',ID,'-timeSeries.csv.gz')));
    matname=fullfile(dataDir,ClassificationType, strcat('id',ID,'-timeSeries.csv'));
    WristLabelBiobank=readtable(matname, 'Delimiter', ',');
    if ID=="19"
        WristLabelBiobank=WristLabelBiobank(1:19830,:);
    end
    LabelDateTime=WristLabelBiobank.time;
    Wristlabel= boolean(table2array(WristLabelBiobank(:,3:11)));
    LabelName=WristLabelBiobank.Properties.VariableNames(3:11);
    LabelDateTime = regexprep(LabelDateTime, ' \[.*?\]', '');
    dateFormat = 'yyyy-MM-dd HH:mm:ss.SSSSSSZ';
    LabelDateTime= datetime(LabelDateTime, 'InputFormat', dateFormat, 'TimeZone', 'UTC');

    load(fullfile('dataProcessed_Wrist',strcat('ID', ID, '_processed.mat')),'timeDatetime')
    timeDatetime=datetime(timeDatetime,'InputFormat', dateFormat, 'TimeZone', 'UTC');
    disp(LabelDateTime(1))
    disp(timeDatetime(1))
    if LabelDateTime(1)==timeDatetime(1)

        if LabelDateTime(end)<timeDatetime(end)
            LabelDateTime=[LabelDateTime;timeDatetime(end)];
        end

        LabelDateTime=posixtime(LabelDateTime);
        timeDatetime=posixtime(timeDatetime);
        expandedLabels=nan(size(timeDatetime,1),length(LabelName));
        startIndex=1;
        % Expand the labels
        for i = 1:length(Wristlabel)

            [~,endIndex]= min(abs((LabelDateTime(i+1))-(timeDatetime)));
            endIndex =  endIndex-1;
            expandedLabels(startIndex:endIndex,:) = repmat(Wristlabel(i,:),length(startIndex:endIndex),1);
            startIndex=endIndex+1;

        end

    else

        error('time doesnot fit')
    end

    if ClassificationType=="ActivityIntensity"
        save(fullfile('dataProcessed_Wrist',strcat('ID', ID, 'AIlabel')),'expandedLabels','-v7.3')
    else
        save(fullfile('dataProcessed_Wrist',strcat('ID', ID, 'ATlabel')),'expandedLabels','-v7.3')
    end

    % Save the extracted features to the file
    fprintf('Saved feature extraction for ID%s in %s.\n' , ID, fullfile('dataProcessed_Wrist',strcat('ID', ID, 'ATlabel')));

end
end